---@param this Attribute
Class("Attribute")
    .initial(
    function(this)
        PropChange(this, "missile", "std", this.prop("missile") or {}, false)
        PropChange(this, "lightning", "std", this.prop("lightning") or {}, false)
        PropChange(this, "reborn", "std", this.prop("reborn") or -999, false)
        PropChange(this, "hp", "std", this.prop("hp") or 0, false)
        PropChange(this, "hpCur", "std", this.prop("hpCur") or 0, false)
        PropChange(this, "hpRegen", "std", this.prop("hpRegen") or 0, false)
        PropChange(this, "hpSuckAttack", "std", this.prop("hpSuckAttack") or 0, false)
        PropChange(this, "hpSuckAbility", "std", this.prop("hpSuckAbility") or 0, false)
        PropChange(this, "mp", "std", this.prop("mp") or 0, false)
        PropChange(this, "mpCur", "std", this.prop("mpCur") or 0, false)
        PropChange(this, "mpRegen", "std", this.prop("mpRegen") or 0, false)
        PropChange(this, "mpSuckAttack", "std", this.prop("mpSuckAttack") or 0, false)
        PropChange(this, "mpSuckAbility", "std", this.prop("mpSuckAbility") or 0, false)
        PropChange(this, "sightBase", "std", this.prop("sightBase") or 0, false)
        PropChange(this, "sightDiff", "std", this.prop("sightDiff") or 0, false)
        PropChange(this, "sight", "std", this.prop("sight") or 0, false)
        PropChange(this, "nsight", "std", this.prop("nsight") or 0, false)
        PropChange(this, "attack", "std", this.prop("attack") or 0, false)
        PropChange(this, "attackSpaceBase", "std", this.prop("attackSpaceBase") or 0, false)
        PropChange(this, "attackSpace", "std", this.prop("attackSpace") or 0, false)
        PropChange(this, "attackSpeed", "std", this.prop("attackSpeed") or 0, false)
        PropChange(this, "attackRangeAcquire", "std", this.prop("attackRangeAcquire") or 0, false)
        PropChange(this, "attackRange", "std", this.prop("attackRange") or 0, false)
        PropChange(this, "attackRipple", "std", this.prop("attackRipple") or 0, false)
        PropChange(this, "defend", "std", this.prop("defend") or 0, false)
        PropChange(this, "move", "std", this.prop("move") or 0, false)
        PropChange(this, "str", "std", this.prop("str") or 0, false)
        PropChange(this, "agi", "std", this.prop("agi") or 0, false)
        PropChange(this, "int", "std", this.prop("int") or 0, false)
        PropChange(this, "cure", "std", this.prop("cure") or 0, false)
        PropChange(this, "avoid", "std", this.prop("avoid") or 0, false)
        PropChange(this, "aim", "std", this.prop("aim") or 0, false)
        PropChange(this, "punish", "std", this.prop("punish") or 0, false)
        PropChange(this, "punishCur", "std", this.prop("punishCur") or 0, false)
        PropChange(this, "punishRegen", "std", this.prop("punishRegen") or 0, false)
        PropChange(this, "weight", "std", this.prop("weight") or 0, false)
        PropChange(this, "weightCur", "std", this.prop("weightCur") or 0, false)
        PropChange(this, "hurtIncrease", "std", this.prop("hurtIncrease") or 0, false)
        PropChange(this, "hurtReduction", "std", this.prop("hurtReduction") or 0, false)
        PropChange(this, "hurtRebound", "std", this.prop("hurtRebound") or 0, false)
        PropChange(this, "damageIncrease", "std", this.prop("damageIncrease") or 0, false)
        PropChange(this, "crit", "std", this.prop("crit") or 0, false)
        PropChange(this, "cost", "std", this.prop("cost") or 0, false)
        PropChange(this, "castChant", "std", this.prop("castChant") or 0, false)
        PropChange(this, "coolDown", "std", this.prop("coolDown") or 0, false)
        PropChange(this, "coolDownSec", "std", this.prop("coolDownSec") or 0, false)
        -- 默认各附魔强化和抵抗
        enchant.types.forEach(function(key, value)
            if (value.strengthen ~= 0 and this.enchant(key) == 0) then
                this.enchant(key, value.strengthen)
            end
            if (value.resistance ~= 0 and this.enchantResistance(key) == 0) then
                this.enchantResistance(key, value.resistance)
            end
        end)
    end)